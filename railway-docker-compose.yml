version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=${DATABASE_HOST}
      - DB_PORT=${DATABASE_PORT}
      - DB_USERNAME=${DATABASE_USERNAME}
      - DB_PASSWORD=${DATABASE_PASSWORD}
      - DB_DATABASE=${DATABASE_NAME}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_LAMBDA_FUNCTION_NAME=${AWS_LAMBDA_FUNCTION_NAME}
    depends_on:
      - mysql
    networks:
      - chat_network

  mysql:
    image: mysql:8.0
    container_name: chat_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chat_network

volumes:
  mysql_data:

networks:
  chat_network:
    driver: bridge 